{
	"info": {
		"_postman_id": "f57c1241-1645-4cde-a543-c06507723fa0",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25432430"
	},
	"item": [
		{
			"name": "new board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"boardId\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct board name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa tablica #1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa tablica #1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/boards/?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "board check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Correct board ID in user's workspace\", function () {\r",
							"  pm.expect(pm.response.json().id).to.eql(pm.environment.get(\"boardId\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}1/members/me/boards?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}1"
					],
					"path": [
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new list #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ListId_1\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa lista #1\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa lista #1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists?idBoard={{boardId}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new list #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ListId_2\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa lista #2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa lista #2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists?idBoard={{boardId}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new list #3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ListId_3\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa lista #3\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa lista #3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists?idBoard={{boardId}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Lists check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List #1 on board\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"ListId_1\"));\r",
							"});\r",
							"\r",
							"pm.test(\"List #2 on board\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"ListId_2\"));\r",
							"});\r",
							"\r",
							"pm.test(\"List #3 on board\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"ListId_3\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/boards/{{boardId}}/lists?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardId}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update list#3 name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct updated list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Zmieniona lista #3\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Zmieniona lista #3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists/{{ListId_3}}?key={{api-key}}&token={{token}}&idBoard={{boardId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListId_3}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "archive list#3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Correctly archived\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.closed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"value\" : true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists/{{ListId_3}}/closed?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListId_3}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new card#1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"CardId_1\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa karta #1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa karta #1\",\r\n    \"desc\" : \"Bonifacy chodzi po ciemku.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards?idList={{ListId_1}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListId_1}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new card#2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"CardId_2\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa karta #2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa karta #2\",\r\n    \"desc\" : \"Bonifacy chodzi po ciemku.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards?idList={{ListId_1}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListId_1}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new card#3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"CardId_3\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa karta #3\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa karta #3\",\r\n    \"desc\" : \"Bonifacy chodzi po ciemku.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards?idList={{ListId_1}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListId_1}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new card#4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"CardId_4\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa karta #4\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa karta #4\",\r\n    \"desc\" : \"Bonifacy chodzi po ciemku.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards?idList={{ListId_1}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListId_1}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new card#5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"CardId_5\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct list name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa karta #5\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa karta #5\",\r\n    \"desc\" : \"Bonifacy chodzi po ciemku.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards?idList={{ListId_1}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListId_1}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cards check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card #1 on list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_1\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Card #2 on list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_2\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Card #3 on list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_3\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Card #4 on list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_4\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Card #5 on list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_5\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists/{{ListId_1}}/cards?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListId_1}}",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Card #1 name update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct updated card name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Zmieniona karta #1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Zmieniona karta #1\",\r\n    \"desc\" : \"Bonifacy nie chodzi za dnia.\",\r\n    \"cover\" : {\r\n        \"color\" : \"blue\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards/{{CardId_1}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardId_1}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete card #5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards/{{CardId_5}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardId_5}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleted card #5 check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted card not found. Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards/{{CardId_5}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardId_5}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive card #4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    //parse the response JSON and test three properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.closed).to.be.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"closed\" : true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards/{{CardId_4}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardId_4}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card #3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"idList\" : \"{{ListId_2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/cards/{{CardId_3}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardId_3}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Moved card check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card #3 moved to list #2\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get(\"CardId_3\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/lists/{{ListId_2}}/cards?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListId_2}}",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add new checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ChecklistId\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Correct Checklist name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"Nowa Checklista\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa Checklista\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/checklists?idCard={{CardId_2}}&key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{CardId_2}}"
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new checklist check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Checklist is in card #2\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.idCard).to.be.eql(pm.variables.get(\"CardId_2\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Checklist name is correct\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.be.eql(\"Nowa Checklista\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Nowa Checklista\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/checklists/{{ChecklistId}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/1/boards/{{boardId}}?key={{api-key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "ListId_1",
			"value": ""
		},
		{
			"key": "ListId_2",
			"value": ""
		},
		{
			"key": "ListId_3",
			"value": ""
		},
		{
			"key": "CardId_1",
			"value": ""
		},
		{
			"key": "CardId_2",
			"value": ""
		},
		{
			"key": "CardId_3",
			"value": ""
		},
		{
			"key": "CardId_4",
			"value": ""
		},
		{
			"key": "CardId_5",
			"value": ""
		},
		{
			"key": "ChecklistId",
			"value": ""
		}
	]
}